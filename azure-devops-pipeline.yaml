stages:
- stage: validate
  jobs:
  - job: validate
    continueOnError: false
    steps:
    - task: TerraformInstaller@0
      displayName: 'install'
      inputs:
        terraformVersion: 'latest'
    - task: TerraformTaskV1@0
      displayName: 'init'
      inputs:
        provider: 'azurerm'
        command: 'init'
        backendServiceArm: 'azure-spn'
        backendAzureRmResourceGroupName: 'azdevops'
        backendAzureRmStorageAccountName: 'storageazdevopsalilia'
        backendAzureRmContainerName: 'blobazdevops'
        backendAzureRmKey: 'terraform.tfstate'
    - task: TerraformTaskV1@0
      displayName: 'validate'
      inputs:
        provider: 'azurerm'
        command: 'validate'
- stage: deploy
  jobs:
  - deployment: deploy_terraform
    continueOnError: false
    environment: 'dev'
    strategy:
     runOnce:
       deploy:
        steps:
          - checkout: self
          - task: TerraformInstaller@0
            displayName: 'install'
            inputs:
              terraformVersion: 'latest'
          - task: TerraformTaskV1@0
            displayName: 'init'
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'azure-spn'
              backendAzureRmResourceGroupName: 'azdevops'
              backendAzureRmStorageAccountName: 'storageazdevopsalilia'
              backendAzureRmContainerName: 'blobazdevops'
              backendAzureRmKey: 'terraform.tfstate'
          - task: TerraformTaskV1@0
            displayName: 'plan'
            inputs:
              provider: 'azurerm'
              command: 'plan'
              environmentServiceNameAzureRM: 'azure-spn'
          - task: TerraformTaskV1@0
            displayName: 'apply'
            inputs:
              provider: 'azurerm'
              command: 'apply'
              environmentServiceNameAzureRM: 'azure-spn'